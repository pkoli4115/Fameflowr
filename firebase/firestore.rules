rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return request.auth != null &&
        (request.auth.token.admin == true ||
         request.auth.token.role in ['admin','superadmin']);
    }

    function userEditableKeys() { return ['name','photoURL','bio','phone']; }
    function adminEditableKeys() { return ['flagged','blocked','status','role','name','notes','deleted','deletedAt','__lastActor']; }

    // USERS
    match /users/{userId} {
      allow read: if true;
      allow create: if isSignedIn() && (request.auth.uid == userId || isAdmin());

      // user self-update (limited keys)
      allow update: if isSignedIn()
        && request.auth.uid == userId
        && request.resource.data.diff(resource.data).changedKeys().hasOnly(userEditableKeys());

      // admin update
      allow update: if isAdmin()
        && request.resource.data.diff(resource.data).changedKeys().hasOnly(resource.data.keys().concat(adminEditableKeys()));

      allow delete: if isAdmin();
    }

    // CAMPAIGNS (admin-only)
    match /campaigns/{campaignId} {
      allow read, write: if isAdmin();

      // (Optional) validation if you want extra safety
      allow create, update: if isAdmin()
        && request.resource.data.title is string
        && request.resource.data.visibility in ['public','private']
        && request.resource.data.status in ['draft','scheduled','active','completed','archived'];
      
      // Participants (admin-only)
      match /participants/{participantId} {
        allow read, write: if isAdmin();
      }
    }

    // AGGREGATED STATS (/stats/campaigns)
    match /stats/{docId} {
      allow read: if isAdmin();
      allow write: if false;  // Cloud Functions write via Admin SDK (bypasses rules)
    }

    // AUDIT LOGS (admin read, CF writes)
    match /auditlogs/{id} {
      allow read: if isAdmin();
      allow create: if isAdmin();
      allow update, delete: if false;
    }
    match /auditLogs/{id} {
      allow read: if isAdmin();
      allow create: if isAdmin();
      allow update, delete: if false;
    }
  }
}
